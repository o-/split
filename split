#!/usr/bin/env ruby

require 'yaml'
require 'uri'

DRY_RUN = ARGV[0] == '--test'
URL = if DRY_RUN then ARGV[1] else ARGV[0] end

unless URL
  puts "usage: split [--test] <url>"
  exit
end

def config_file
  ['./split.conf','~/.split.conf','/etc/split.conf'].each do |f|
    file = File.expand_path(f)
    return file if File.exists?(file)
  end
  fail 'No config file found!'
end

def config
  @config ||= YAML::load_file(config_file)
end

def escape(url)
  "'#{URI::encode(url).gsub('\'','\'"\'"\'')}'"
end

def rules
  config['rules']
end

def browsers
  config['browsers']
end

def default_personality
  config['default'] or fail "no default personality configured."
end

def domain(url)
  uri = URI.parse(url)
  uri = URI.parse("http://#{url}") if uri.scheme.nil?
  uri.host.downcase
end

def match_url(url)
  host = domain(url)
  rules.each do |personality,rules|
    return personality if rules.any?{|rule| host.end_with? rule}
  end
  nil
end

def browser_cmd(browser,profile)
  additional_opts = browser['profiles'][profile]
  if browser['bin'] =~ /firefox/ || browser['bin'] =~ /iceweasel/
    if browser['profiles'].size > 1
      fail "Firefox does not support multiple running profiles, sorry!"
    end
    "#{browser['bin']} #{additional_opts}"
  else
    "#{browser['bin']} #{browser['profile_switch']}#{profile} #{additional_opts}"
  end
end

def personality2cmd(personality)
  (browser,profile) = personality.split(':')
  browser = browsers[browser]
  browser_cmd(browser,profile)
end

def open(url)
  personality = match_url(url) || default_personality
  cmd = personality2cmd(personality)
  cmd = "#{cmd} #{escape(url)} &"
  if DRY_RUN
    puts cmd
  else
    puts `#{cmd}`
  end
end

open URL
